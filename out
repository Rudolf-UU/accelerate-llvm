nofib-llvm-ptx
  sharing
    simple:                   OK
    ordering:                 OK
    sort:                     OK
    blowup:                   OK
    bfs:                      OK
    same level
      1:                      OK
      2:                      OK
    empty top
      1:                      OK
      2:                      OK
    pipe:                     OK
    bound variables:          OK
    big tuple:                OK
    iteration
      simple:                 OK
      outside:                OK
      body and condition:     OK
      awhile:                 OK
      iterate:                OK
      nested:                 OK
      unused:                 OK
    nested data-parallelism
      mvm:                    FAIL (expected)
        src/Data/Array/Accelerate/Test/NoFib/Sharing.hs:70:
        
        *** Internal error in package accelerate ***
        *** Please submit a bug report at https://github.com/AccelerateHS/accelerate/issues
        
        inconsistent valuation at shared 'Exp' tree (sa=3259; env=[3257])
        
        Note that this error usually arises due to the presence of nested data
        parallelism; when a parallel computation attempts to initiate new parallel
        work _which depends on_ a scalar variable given by the first computation.
        
        For example, suppose we wish to sum the columns of a two-dimensional array.
        You might think to do this in the following (incorrect) way: by constructing
        a vector using 'generate' where at each index we 'slice' out the
        corresponding column of the matrix and 'sum' it:
        
        > sum_columns_ndp :: Num a => Acc (Matrix a) -> Acc (Vector a)
        > sum_columns_ndp mat =
        >   let I2 rows cols = shape mat
        >   in  generate (I1 cols)
        >                (\(I1 col) -> the $ sum (slice mat (lift (Z :. All :. col))))
        
        However, since both 'generate' and 'slice' are data-parallel operators, and
        moreover that 'slice' _depends on_ the argument 'col' given to it by the
        'generate' function, this operation requires nested parallelism and is thus
        not (at this time) permitted. The clue that this definition is invalid is
        that in order to create a program which will be accepted by the type checker,
        we had to use the function 'the' to retrieve the result of the parallel
        'sum', effectively concealing that this is a collective operation in order to
        match the type expected by 'generate'.
        
        To solve this particular example, we can make use of the fact that (most)
        collective operations in Accelerate are _rank polymorphic_. The 'sum'
        operation reduces along the innermost dimension of an array of arbitrary
        rank, reducing the dimensionality of the array by one. To reduce the array
        column-wise then, we first need to simply 'transpose' the array:
        
        > sum_columns :: Num a => Acc (Matrix a) -> Acc (Vector a)
        > sum_columns = sum . transpose
        
        If you feel like this is not the cause of your error, or you would like some
        advice locating the problem and perhaps with a workaround, feel free to
        submit an issue at the above URL.
        
        CallStack (from HasCallStack):
          internalError: Data.Array.Accelerate.Trafo.Sharing:700:56
          cvt: Data.Array.Accelerate.Trafo.Sharing:758:48
          cvt: Data.Array.Accelerate.Trafo.Sharing:760:55
          cvt: Data.Array.Accelerate.Trafo.Sharing:760:46
          cvt: Data.Array.Accelerate.Trafo.Sharing:692:69
          convertSharingExp: Data.Array.Accelerate.Trafo.Sharing:907:25
          convertSharingFun1: Data.Array.Accelerate.Trafo.Sharing:295:17
          convertSharingAcc: Data.Array.Accelerate.Trafo.Sharing:289:16
          convertSharingAcc: Data.Array.Accelerate.Trafo.Sharing:289:16
          convertSharingAcc: Data.Array.Accelerate.Trafo.Sharing:282:13
          convertSharingAcc: Data.Array.Accelerate.Trafo.Sharing:279:16
          convertSharingAcc: Data.Array.Accelerate.Trafo.Sharing:242:3
          convertOpenAcc: Data.Array.Accelerate.Trafo.Sharing:162:35
          convertAccWith: Data.Array.Accelerate.Trafo.Sharing:159:14
          convertAcc: Data.Array.Accelerate.Test.NoFib.Sharing:69:19
         (expected failure)
  prelude
    map
      TupRsingle Int64
        DIM0
          neg:                OK (0.34s)
              ✓ <interactive> passed 100 tests.
          abs:                OK (0.01s)
              ✓ <interactive> passed 100 tests.
          signum:             OK (0.01s)
              ✓ <interactive> passed 100 tests.
          complement:         OK (0.01s)
              ✓ <interactive> passed 100 tests.
          popCount:           OK (0.01s)
              ✓ <interactive> passed 100 tests.
          countLeadingZeros:  OK (0.01s)
              ✓ <interactive> passed 100 tests.
          countTrailingZeros: OK (0.01s)
              ✓ <interactive> passed 100 tests.
          fromIntegral:       OK (0.01s)
              ✓ <interactive> passed 100 tests.
        DIM1
          neg:                OK (0.10s)
              ✓ <interactive> passed 100 tests.
          abs:                OK (0.10s)
              ✓ <interactive> passed 100 tests.
          signum:             OK (0.08s)
              ✓ <interactive> passed 100 tests.
          complement:         OK (0.09s)
              ✓ <interactive> passed 100 tests.
          popCount:           OK (0.11s)
              ✓ <interactive> passed 100 tests.
          countLeadingZeros:  OK (0.09s)
              ✓ <interactive> passed 100 tests.
          countTrailingZeros: OK (0.09s)
              ✓ <interactive> passed 100 tests.
          fromIntegral:       OK (0.09s)
              ✓ <interactive> passed 100 tests.
        DIM2
          neg:                OK (0.20s)
              ✓ <interactive> passed 100 tests.
          abs:                OK (0.27s)
              ✓ <interactive> passed 100 tests.
          signum:             OK (0.21s)
              ✓ <interactive> passed 100 tests.
          complement:         OK (0.18s)
              ✓ <interactive> passed 100 tests.
          popCount:           OK (0.18s)
              ✓ <interactive> passed 100 tests.
          countLeadingZeros:  OK (0.20s)
              ✓ <interactive> passed 100 tests.
          countTrailingZeros: OK (0.22s)
              ✓ <interactive> passed 100 tests.
          fromIntegral:       OK (0.24s)
              ✓ <interactive> passed 100 tests.
      TupRsingle Double
        DIM0
          neg:                OK (0.01s)
              ✓ <interactive> passed 100 tests.
          abs:                OK (0.01s)
              ✓ <interactive> passed 100 tests.
          signum:             OK (0.01s)
              ✓ <interactive> passed 100 tests.
          recip:              OK (0.01s)
              ✓ <interactive> passed 100 tests.
          sin:                OK (0.01s)
              ✓ <interactive> passed 100 tests.
          cos:                OK (0.01s)
              ✓ <interactive> passed 100 tests.
          tan:                OK (0.01s)
              ✓ <interactive> passed 100 tests.
          asin:               OK (0.01s)
              ✓ <interactive> passed 100 tests.
          acos:               OK (0.01s)
              ✓ <interactive> passed 100 tests.
          atan:               OK (0.01s)
              ✓ <interactive> passed 100 tests.
          asinh:              OK (0.01s)
              ✓ <interactive> passed 100 tests.
          acosh:              OK (0.01s)
              ✓ <interactive> passed 100 tests.
          atanh:              OK (0.01s)
              ✓ <interactive> passed 100 tests.
          exp:                OK (0.01s)
              ✓ <interactive> passed 100 tests.
          sqrt:               OK (0.01s)
              ✓ <interactive> passed 100 tests.
          log:                OK (0.01s)
              ✓ <interactive> passed 100 tests.
          truncate:           OK (0.01s)
              ✓ <interactive> passed 100 tests.
          round:              OK (0.01s)
              ✓ <interactive> passed 100 tests.
          floor:              OK (0.01s)
              ✓ <interactive> passed 100 tests.
          ceiling:            OK (0.01s)
              ✓ <interactive> passed 100 tests.
        DIM1
          neg:                OK (0.08s)
              ✓ <interactive> passed 100 tests.
          abs:                OK (0.08s)
              ✓ <interactive> passed 100 tests.
          signum:             OK (0.09s)
              ✓ <interactive> passed 100 tests.
          recip:              OK (0.08s)
              ✓ <interactive> passed 100 tests.
          sin:                OK (0.09s)
              ✓ <interactive> passed 100 tests.
          cos:                OK (0.08s)
              ✓ <interactive> passed 100 tests.
          tan:                OK (0.10s)
              ✓ <interactive> passed 100 tests.
          asin:               OK (0.07s)
              ✓ <interactive> passed 100 tests.
          acos:               OK (0.06s)
              ✓ <interactive> passed 100 tests.
          atan:               OK (0.08s)
              ✓ <interactive> passed 100 tests.
          asinh:              OK (0.07s)
              ✓ <interactive> passed 100 tests.
          acosh:              OK (0.08s)
              ✓ <interactive> passed 100 tests.
          atanh:              OK (0.07s)
              ✓ <interactive> passed 100 tests.
          exp:                OK (0.08s)
              ✓ <interactive> passed 100 tests.
          sqrt:               OK (0.08s)
              ✓ <interactive> passed 100 tests.
          log:                OK (0.09s)
              ✓ <interactive> passed 100 tests.
          truncate:           OK (0.08s)
              ✓ <interactive> passed 100 tests.
          round:              OK (0.07s)
              ✓ <interactive> passed 100 tests.
          floor:              OK (0.09s)
              ✓ <interactive> passed 100 tests.
          ceiling:            OK (0.08s)
              ✓ <interactive> passed 100 tests.
        DIM2
          neg:                OK (0.18s)
              ✓ <interactive> passed 100 tests.
          abs:                OK (0.17s)
              ✓ <interactive> passed 100 tests.
          signum:             OK (0.15s)
              ✓ <interactive> passed 100 tests.
          recip:              OK (0.18s)
              ✓ <interactive> passed 100 tests.
          sin:                OK (0.19s)
              ✓ <interactive> passed 100 tests.
          cos:                OK (0.19s)
              ✓ <interactive> passed 100 tests.
          tan:                OK (0.23s)
              ✓ <interactive> passed 100 tests.
          asin:               OK (0.15s)
              ✓ <interactive> passed 100 tests.
          acos:               OK (0.16s)
              ✓ <interactive> passed 100 tests.
          atan:               OK (0.17s)
              ✓ <interactive> passed 100 tests.
          asinh:              OK (0.17s)
              ✓ <interactive> passed 100 tests.
          acosh:              OK (0.16s)
              ✓ <interactive> passed 100 tests.
          atanh:              OK (0.15s)
              ✓ <interactive> passed 100 tests.
          exp:                OK (0.20s)
              ✓ <interactive> passed 100 tests.
          sqrt:               OK (0.16s)
              ✓ <interactive> passed 100 tests.
          log:                OK (0.24s)
              ✓ <interactive> passed 100 tests.
          truncate:           OK (0.17s)
              ✓ <interactive> passed 100 tests.
          round:              OK (0.20s)
              ✓ <interactive> passed 100 tests.
          floor:              OK (0.18s)
              ✓ <interactive> passed 100 tests.
          ceiling:            OK (0.18s)
              ✓ <interactive> passed 100 tests.
    zipWith
      TupRsingle Int64
        DIM0
          (+):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (-):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (*):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          quot:               OK (0.02s)
              ✓ <interactive> passed 100 tests.
          rem:                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          quotRem:            OK (0.02s)
              ✓ <interactive> passed 100 tests.
          div:                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          mod:                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          divMod:             OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (.&.):              OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (.|.):              OK (0.02s)
              ✓ <interactive> passed 100 tests.
          xor:                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          shift:              OK (0.02s)
              ✓ <interactive> passed 100 tests.
          shiftL:             OK (0.02s)
              ✓ <interactive> passed 100 tests.
          shiftR:             OK (0.02s)
              ✓ <interactive> passed 100 tests.
          rotate:             OK (0.02s)
              ✓ <interactive> passed 100 tests.
          rotateL:            OK (0.02s)
              ✓ <interactive> passed 100 tests.
          rotateR:            OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (<):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (>):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (<=):               OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (>=):               OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (==):               OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (/=):               OK (0.02s)
              ✓ <interactive> passed 100 tests.
          min:                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          max:                OK (0.02s)
              ✓ <interactive> passed 100 tests.
        DIM1
          (+):                OK (0.17s)
              ✓ <interactive> passed 100 tests.
          (-):                OK (0.16s)
              ✓ <interactive> passed 100 tests.
          (*):                OK (0.18s)
              ✓ <interactive> passed 100 tests.
          quot:               OK (0.17s)
              ✓ <interactive> passed 100 tests.
          rem:                OK (0.19s)
              ✓ <interactive> passed 100 tests.
          quotRem:            OK (0.19s)
              ✓ <interactive> passed 100 tests.
          div:                OK (0.21s)
              ✓ <interactive> passed 100 tests.
          mod:                OK (0.20s)
              ✓ <interactive> passed 100 tests.
          divMod:             OK (0.20s)
              ✓ <interactive> passed 100 tests.
          (.&.):              OK (0.17s)
              ✓ <interactive> passed 100 tests.
          (.|.):              OK (0.16s)
              ✓ <interactive> passed 100 tests.
          xor:                OK (0.17s)
              ✓ <interactive> passed 100 tests.
          shift:              OK (0.18s)
              ✓ <interactive> passed 100 tests.
          shiftL:             OK (0.17s)
              ✓ <interactive> passed 100 tests.
          shiftR:             OK (0.17s)
              ✓ <interactive> passed 100 tests.
          rotate:             OK (0.17s)
              ✓ <interactive> passed 100 tests.
          rotateL:            OK (0.17s)
              ✓ <interactive> passed 100 tests.
          rotateR:            OK (0.18s)
              ✓ <interactive> passed 100 tests.
          (<):                OK (0.18s)
              ✓ <interactive> passed 100 tests.
          (>):                OK (0.17s)
              ✓ <interactive> passed 100 tests.
          (<=):               OK (0.18s)
              ✓ <interactive> passed 100 tests.
          (>=):               OK (0.18s)
              ✓ <interactive> passed 100 tests.
          (==):               OK (0.16s)
              ✓ <interactive> passed 100 tests.
          (/=):               OK (0.17s)
              ✓ <interactive> passed 100 tests.
          min:                OK (0.17s)
              ✓ <interactive> passed 100 tests.
          max:                OK (0.18s)
              ✓ <interactive> passed 100 tests.
        DIM2
          (+):                OK (0.37s)
              ✓ <interactive> passed 100 tests.
          (-):                OK (0.46s)
              ✓ <interactive> passed 100 tests.
          (*):                OK (0.39s)
              ✓ <interactive> passed 100 tests.
          quot:               OK (0.46s)
              ✓ <interactive> passed 100 tests.
          rem:                OK (0.48s)
              ✓ <interactive> passed 100 tests.
          quotRem:            OK (0.41s)
              ✓ <interactive> passed 100 tests.
          div:                OK (0.37s)
              ✓ <interactive> passed 100 tests.
          mod:                OK (0.34s)
              ✓ <interactive> passed 100 tests.
          divMod:             OK (0.49s)
              ✓ <interactive> passed 100 tests.
          (.&.):              OK (0.39s)
              ✓ <interactive> passed 100 tests.
          (.|.):              OK (0.42s)
              ✓ <interactive> passed 100 tests.
          xor:                OK (0.39s)
              ✓ <interactive> passed 100 tests.
          shift:              OK (0.43s)
              ✓ <interactive> passed 100 tests.
          shiftL:             OK (0.42s)
              ✓ <interactive> passed 100 tests.
          shiftR:             OK (0.45s)
              ✓ <interactive> passed 100 tests.
          rotate:             OK (0.38s)
              ✓ <interactive> passed 100 tests.
          rotateL:            OK (0.41s)
              ✓ <interactive> passed 100 tests.
          rotateR:            OK (0.39s)
              ✓ <interactive> passed 100 tests.
          (<):                OK (0.43s)
              ✓ <interactive> passed 100 tests.
          (>):                OK (0.43s)
              ✓ <interactive> passed 100 tests.
          (<=):               OK (0.43s)
              ✓ <interactive> passed 100 tests.
          (>=):               OK (0.36s)
              ✓ <interactive> passed 100 tests.
          (==):               OK (0.36s)
              ✓ <interactive> passed 100 tests.
          (/=):               OK (0.44s)
              ✓ <interactive> passed 100 tests.
          min:                OK (0.41s)
              ✓ <interactive> passed 100 tests.
          max:                OK (0.38s)
              ✓ <interactive> passed 100 tests.
      TupRsingle Double
        DIM0
          (+):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (-):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (*):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (/):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (**):               OK (0.02s)
              ✓ <interactive> passed 100 tests.
          atan2:              OK (0.02s)
              ✓ <interactive> passed 100 tests.
          logBase:            OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (<):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (>):                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (<=):               OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (>=):               OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (==):               OK (0.02s)
              ✓ <interactive> passed 100 tests.
          (/=):               OK (0.02s)
              ✓ <interactive> passed 100 tests.
          min:                OK (0.02s)
              ✓ <interactive> passed 100 tests.
          max:                OK (0.02s)
              ✓ <interactive> passed 100 tests.
        DIM1
          (+):                OK (0.15s)
              ✓ <interactive> passed 100 tests.
          (-):                OK (0.16s)
              ✓ <interactive> passed 100 tests.
          (*):                OK (0.17s)
              ✓ <interactive> passed 100 tests.
          (/):                OK (0.18s)
              ✓ <interactive> passed 100 tests.
          (**):               OK (0.17s)
              ✓ <interactive> passed 100 tests.
          atan2:              OK (0.15s)
              ✓ <interactive> passed 100 tests.
          logBase:            OK (0.18s)
              ✓ <interactive> passed 100 tests.
          (<):                OK (0.16s)
              ✓ <interactive> passed 100 tests.
          (>):                OK (0.15s)
              ✓ <interactive> passed 100 tests.
          (<=):               OK (0.16s)
              ✓ <interactive> passed 100 tests.
          (>=):               OK (0.17s)
              ✓ <interactive> passed 100 tests.
          (==):               OK (0.16s)
              ✓ <interactive> passed 100 tests.
          (/=):               OK (0.16s)
              ✓ <interactive> passed 100 tests.
          min:                OK (0.17s)
              ✓ <interactive> passed 100 tests.
          max:                OK (0.15s)
              ✓ <interactive> passed 100 tests.
        DIM2
          (+):                OK (0.38s)
              ✓ <interactive> passed 100 tests.
          (-):                OK (0.37s)
              ✓ <interactive> passed 100 tests.
          (*):                OK (0.44s)
              ✓ <interactive> passed 100 tests.
          (/):                OK (0.43s)
              ✓ <interactive> passed 100 tests.
          (**):               OK (0.41s)
              ✓ <interactive> passed 100 tests.
          atan2:              OK (0.38s)
              ✓ <interactive> passed 100 tests.
          logBase:            OK (0.48s)
              ✓ <interactive> passed 100 tests.
          (<):                OK (0.35s)
              ✓ <interactive> passed 100 tests.
          (>):                OK (0.34s)
              ✓ <interactive> passed 100 tests.
          (<=):               OK (0.38s)
              ✓ <interactive> passed 100 tests.
          (>=):               OK (0.39s)
              ✓ <interactive> passed 100 tests.
          (==):               OK (0.35s)
              ✓ <interactive> passed 100 tests.
          (/=):               OK (0.36s)
              ✓ <interactive> passed 100 tests.
          min:                OK (0.48s)
              ✓ <interactive> passed 100 tests.
          max:                OK (0.43s)
              ✓ <interactive> passed 100 tests.
    simd
      TupRsingle Int64
        extract
          V2:                 OK (0.39s)
              ✓ <interactive> passed 100 tests.
          V3:                 OK (0.58s)
              ✓ <interactive> passed 100 tests.
          V4:                 OK (0.61s)
              ✓ <interactive> passed 100 tests.
        inject
          V2:                 OK (0.19s)
              ✓ <interactive> passed 100 tests.
          V3:                 OK (0.27s)
              ✓ <interactive> passed 100 tests.
          V4:                 OK (0.34s)
              ✓ <interactive> passed 100 tests.
      TupRsingle Double
        extract
          V2:                 OK (0.18s)
              ✓ <interactive> passed 100 tests.
          V3:                 OK (0.26s)
              ✓ <interactive> passed 100 tests.
          V4:                 OK (0.48s)
              ✓ <interactive> passed 100 tests.
        inject
          V2:                 OK (0.15s)
              ✓ <interactive> passed 100 tests.
          V3:                 OK (0.21s)
              ✓ <interactive> passed 100 tests.
          V4:                 OK (0.30s)
              ✓ <interactive> passed 100 tests.
    fold
      TupRsingle Int64
        DIM1
          sum:                OK (0.09s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (0.09s)
              ✓ <interactive> passed 100 tests.
          non-commutative:    OK (0.11s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (0.09s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (0.10s)
              ✓ <interactive> passed 100 tests.
        DIM2
          sum:                OK (0.22s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (0.19s)
              ✓ <interactive> passed 100 tests.
          non-commutative:    OK (0.23s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (0.23s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (0.20s)
              ✓ <interactive> passed 100 tests.
        DIM3
          sum:                OK (0.54s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (0.38s)
              ✓ <interactive> passed 100 tests.
          non-commutative:    OK (0.34s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (0.67s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (0.48s)
              ✓ <interactive> passed 100 tests.
      TupRsingle Double
        DIM1
          sum:                OK (0.07s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (0.07s)
              ✓ <interactive> passed 100 tests.
          non-commutative:    OK (0.09s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (0.07s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (0.07s)
              ✓ <interactive> passed 100 tests.
        DIM2
          sum:                OK (0.16s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (0.19s)
              ✓ <interactive> passed 100 tests.
          non-commutative:    OK (0.13s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (0.16s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (0.14s)
              ✓ <interactive> passed 100 tests.
        DIM3
          sum:                OK (0.47s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (0.36s)
              ✓ <interactive> passed 100 tests.
          non-commutative:    OK (0.31s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (0.37s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (0.38s)
              ✓ <interactive> passed 100 tests.
    foldSeg
      TupRsingle Int64
        DIM1
          sum:                OK (0.31s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (0.31s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (0.31s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (0.27s)
              ✓ <interactive> passed 100 tests.
        DIM2
          sum:                OK (2.10s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (3.15s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (2.93s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (3.43s)
              ✓ <interactive> passed 100 tests.
        DIM3
          sum:                OK (4.09s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (5.95s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (6.31s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (6.68s)
              ✓ <interactive> passed 100 tests.
      TupRsingle Double
        DIM1
          sum:                OK (0.19s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (0.22s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (0.23s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (0.20s)
              ✓ <interactive> passed 100 tests.
        DIM2
          sum:                OK (1.99s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (2.38s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (2.51s)
              ✓ <interactive> passed 100 tests.
          maximum:            OK (3.34s)
              ✓ <interactive> passed 100 tests.
        DIM3
          sum:                OK (5.09s)
              ✓ <interactive> passed 100 tests.
          non-neutral sum:    OK (2.66s)
              ✓ <interactive> passed 100 tests.
          minimum:            OK (4.06s)
              ✓ <interactive> passed 100 tests.
          maximum:            